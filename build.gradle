plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.github.sardul3'
version = '0.0.1-SNAPSHOT'


java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.junit.vintage:junit-vintage-engine:5.9.0'
 	implementation 'org.springframework.retry:spring-retry:2.0.3'
	implementation "org.springframework.boot:spring-boot-starter-actuator"

	// DB related
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'com.h2database:h2'

	implementation 'io.temporal:temporal-sdk:1.20.1'
	implementation 'io.temporal:temporal-testing:1.20.1'

}

tasks.named('test') {
	useJUnitPlatform()
}

// Spring Boot application JAR task
springBoot {
	mainClass.set('com.github.sardul3.temporal_boot.app.TemporalBootApplication')
}

task runWorker(type: JavaExec) {
    group = 'application'
    description = 'Run the Spring Boot application as a worker using the worker profile'

    classpath = sourceSets.main.runtimeClasspath
    main = 'com.github.sardul3.temporal_boot.workers.PublishBannerMessageWorker' // Replace with the fully qualified name of your Worker class

    // Pass the worker profile to the application
    args = ['--spring.profiles.active=worker']

    // Use the same JVM options as you would normally use
    jvmArgs = ['-Xmx512m', '-Xms256m']
}